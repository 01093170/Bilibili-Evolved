(()=>{return(e,t)=>{(async()=>{const t=await import(`./i18n.${e.i18nLanguage}`);const n=e=>{const t=[];const n=document.createTreeWalker(e,NodeFilter.SHOW_TEXT,null,false);let o=n.nextNode();while(o){t.push(o);o=n.nextNode()}return t};const o=e=>{const n=t.get(e.nodeValue.trim());if(n!==undefined){if(typeof n==="string"){e.nodeValue=n}else{const{text:t,selector:o}=n;if(e.parentElement.matches(o)){e.nodeValue=t}}}};n(document.body).forEach(o);Observer.childListSubtree("body",e=>{e.forEach(e=>[...e.addedNodes].forEach(e=>{if(e.nodeType===Node.TEXT_NODE){o(e)}else{n(e).forEach(o)}}))})})()}})();